{"version":3,"sources":["components/Header/Header.tsx","actions/StudentActions.ts","actions/StudentActionsTypes.ts","components/StudentComponents/Students.tsx","components/StudentComponents/Student.tsx","App.tsx","serviceWorker.ts","reducers/StudentReducer.ts","reducers/RootReducer.ts","store.ts","index.tsx"],"names":["Header","Navbar","bg","variant","expand","fixed","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","GetStudents","dispatch","a","type","axios","get","URL_PATH","res","payload","data","console","log","Students","match","useDispatch","history","useHistory","useState","studentsPerRow","setPerRows","firstName","lastName","email","partner","school","filter","setFilter","page","Number","params","changeFilter","e","push","target","name","value","useEffect","MAX_STUDENTS_NUMBER","studentState","useSelector","state","students","studentsFiltered","student","toLowerCase","includes","programDetail","filtered","STUDENTS_LENGTH","length","slice","LAST_PAGE","Math","ceil","HAS_NEXT","redirect","parentNode","htmlFor","onChange","onClick","scope","map","key","_id","aria-label","to","aria-hidden","Posts","studentId","gender","nationality","motherTongue","passportNumber","format","dateOfBirth","address","city","postalCode","country","emergencyContact","emergencyName","emergencyPhone","location","courseInformation","startDate","weeksOfStudy","Home","App","exact","path","component","Student","Boolean","window","hostname","initialState","loading","StudentReducer","action","RootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3b7ad8eb.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Nav, Form, FormControl, Button } from 'react-bootstrap';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" fixed=\"top\">\r\n        <Navbar.Brand href=\"/\">Secoia</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"/students\">Students</Nav.Link>\r\n            <Nav.Link href=\"/partners\">Partners</Nav.Link>\r\n            <Nav.Link href=\"/schools\">Schools</Nav.Link>\r\n            <Nav.Link href=\"/logout\">Log Out</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <div className=\"space-60\" />\r\n    </>\r\n  )\r\n}\r\n","import { Dispatch } from \"redux\";\r\nimport {\r\n  StudentDispatchTypes,\r\n  FETCH_STUDENTS,\r\n  STUDENTS_FAIL,\r\n  STUDENTS_SUCCESS,\r\n} from \"./StudentActionsTypes\";\r\nimport axios from \"axios\";\r\n\r\nconst URL_PATH = \"https://secoia-api-rest.herokuapp.com\";\r\n\r\nexport const GetStudents = () => async (\r\n  dispatch: Dispatch<StudentDispatchTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: FETCH_STUDENTS,\r\n    });\r\n\r\n    const res = await axios.get(URL_PATH + \"/students/list/\");\r\n\r\n    dispatch({\r\n      type: STUDENTS_SUCCESS,\r\n      payload: res.data.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    dispatch({\r\n      type: STUDENTS_FAIL,\r\n    });\r\n  }\r\n};\r\n","export const FETCH_STUDENTS = \"FETCH_STUDENTS\";\r\nexport const STUDENTS_FAIL = \"STUDENTS_FAIL\";\r\nexport const STUDENTS_SUCCESS = \"STUDENTS_SUCCESS\";\r\nexport const STUDENT_SUCCESS = \"STUDENTS_SUCCESS\";\r\n\r\nexport type Student = {\r\n  _id: string;\r\n  studentId: string;\r\n  gender: string;\r\n  nationality: string;\r\n  motherTongue: string;\r\n  passportNumber: string;\r\n  lastName: string;\r\n  firstName: string;\r\n  dateOfBirth: number;\r\n  address: string;\r\n  city: string;\r\n  state: string;\r\n  postalCode: string;\r\n  country: string;\r\n  email: string;\r\n  phone: string;\r\n  partner: string;\r\n  emergencyContact: {\r\n    emergencyName: string;\r\n    emergencyPhone: string;\r\n  };\r\n  programDetail: {\r\n    location: string;\r\n    school: string;\r\n  };\r\n  courseInformation: {\r\n    name: string;\r\n    startDate: number;\r\n    weeksOfStudy: number;\r\n  };\r\n  airportTransfer: {\r\n    arrivalDate: number;\r\n    a_flightInformation: string;\r\n    airportPickup: string;\r\n    departureDate: number;\r\n    d_flightInformation: string;\r\n    airportDropoff: string;\r\n  };\r\n  accommodation: {\r\n    type: string;\r\n    specialRequest: string;\r\n    weeks: number;\r\n  };\r\n  medicalInformation: {\r\n    insuranceStatus: boolean;\r\n    bookThroughSchool: boolean;\r\n    allergiesStatus: boolean;\r\n    policyNumber: string;\r\n    listOfAllergies: string[];\r\n  };\r\n};\r\n\r\ninterface FetchStudent {\r\n  type: typeof FETCH_STUDENTS;\r\n}\r\n\r\ninterface StudentFail {\r\n  type: typeof STUDENTS_FAIL;\r\n}\r\n\r\ninterface StudentsSuccess {\r\n  type: typeof STUDENTS_SUCCESS;\r\n  payload: Student[];\r\n}\r\n\r\nexport type StudentDispatchTypes = FetchStudent | StudentFail | StudentsSuccess;\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Students.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RouteComponentProps, Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { RootStore } from '../../store';\r\nimport { GetStudents } from '../../actions/StudentActions';\r\nimport {\r\n    Student\r\n} from \"../../actions/StudentActionsTypes\";\r\n\r\ntype TParams = { page: string };\r\n\r\nexport default function Students({ match }: RouteComponentProps<TParams>) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const history = useHistory();\r\n\r\n    const [studentsPerRow, setPerRows] = useState(10);\r\n    const [filter, setFilter] = useState({ firstName: \"\", lastName: \"\", email: \"\", partner: \"\", school: \"\" });\r\n\r\n    const changeQty = (e: React.ChangeEvent<HTMLSelectElement>) => setPerRows(Number(e.target.value));\r\n\r\n    let page: number = Number(match.params.page) || 1;\r\n\r\n\r\n    const changeFilter = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        history.push(\"/students/\");\r\n\r\n        setFilter({\r\n            ...filter,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    };\r\n\r\n    const resetFilters = (e: React.MouseEvent<HTMLButtonElement>) => setFilter({ firstName: \"\", lastName: \"\", email: \"\", partner: \"\", school: \"\" });\r\n\r\n    useEffect(() => {\r\n        dispatch(GetStudents());\r\n    }, [setPerRows, setFilter]);\r\n\r\n    const MAX_STUDENTS_NUMBER: number = studentsPerRow;\r\n\r\n    const studentState = useSelector((state: RootStore) => state.students)\r\n\r\n    //Filters here\r\n\r\n    const filtered = () => {\r\n        let students = studentState.students && studentState.students;\r\n\r\n        if (students && filter.firstName !== \"\") {\r\n            students = studentState.students && studentState.students.filter(student => student.firstName && student.firstName.toLowerCase().includes(filter.firstName.toLowerCase()))\r\n        }\r\n\r\n        if (students && filter.lastName !== \"\") {\r\n            students = students && students.filter(student => student.lastName && student.lastName.toLowerCase().includes(filter.lastName.toLowerCase()))\r\n        }\r\n\r\n        if (students && filter.email !== \"\") {\r\n            students = students.filter(student => student.email && student.email.toLowerCase().includes(filter.email.toLowerCase()))\r\n        }\r\n\r\n        if (students && filter.partner !== \"\") {\r\n            try {\r\n                students = students.filter(student => student.partner && student.partner.toLowerCase().includes(filter.partner.toLowerCase()))\r\n            } catch (e) {\r\n\r\n            }\r\n        }\r\n\r\n        if (students && filter.school !== \"\") {\r\n            students = students.filter(student => student.programDetail.school && student.programDetail.school.toLowerCase().includes(filter.school.toLowerCase()))\r\n        }\r\n\r\n        return students;\r\n\r\n    }\r\n\r\n    // const students = studentState.students && studentState.students.slice(((page * MAX_STUDENTS_NUMBER) - MAX_STUDENTS_NUMBER), (MAX_STUDENTS_NUMBER * page));\r\n    // const students = filtered();\r\n    const studentsFiltered = filtered();\r\n\r\n    let STUDENTS_LENGTH: number = studentsFiltered && studentsFiltered.length || 0;\r\n\r\n    const students = studentsFiltered && studentsFiltered.slice(((page * MAX_STUDENTS_NUMBER) - MAX_STUDENTS_NUMBER), (MAX_STUDENTS_NUMBER * page));\r\n\r\n\r\n    const LAST_PAGE = studentState.students && Math.ceil(STUDENTS_LENGTH / MAX_STUDENTS_NUMBER)\r\n\r\n    const HAS_NEXT = studentState.students && LAST_PAGE == page ? false : true;\r\n\r\n\r\n\r\n\r\n    const redirect = (e: any) => {\r\n        const id = e.target.parentNode.id;\r\n        history.push(\"/student/\" + id);;\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"students-main\">\r\n            <h1>Students</h1>\r\n\r\n            <div className=\"tool-bar my-3\">\r\n                <div className=\"tool-column\">\r\n                    <label htmlFor=\"firstName\" className=\"mr-2\">First Name: </label>\r\n                    <input type=\"text\" name=\"firstName\" id=\"firstName\" value={filter.firstName} onChange={changeFilter} className=\"mr-2\" />\r\n                </div>\r\n                <div className=\"tool-column\">\r\n                    <label htmlFor=\"lastName\" className=\"mr-2\">Last Name: </label>\r\n                    <input type=\"text\" name=\"lastName\" id=\"lastName\" value={filter.lastName} onChange={changeFilter} className=\"mr-2\" />\r\n                </div>\r\n                <div className=\"tool-column\">\r\n                    <label htmlFor=\"email\" className=\"mr-2\">Email: </label>\r\n                    <input type=\"text\" name=\"email\" id=\"email\" value={filter.email} onChange={changeFilter} className=\"mr-2\" />\r\n                </div>\r\n                <div className=\"tool-column\">\r\n                    <label htmlFor=\"partner\" className=\"mr-2\">Partner: </label>\r\n                    <input type=\"text\" name=\"partner\" id=\"partner\" className=\"mr-2\" value={filter.partner} onChange={changeFilter} />\r\n                </div>\r\n                <div className=\"tool-column\">\r\n                    <label htmlFor=\"school\" className=\"mr-2\">School: </label>\r\n                    <input type=\"text\" name=\"school\" id=\"school\" className=\"mr-2\" value={filter.school} onChange={changeFilter} />\r\n                </div>\r\n                <div className=\"tool-column\">\r\n                    <label htmlFor=\"rows\" className=\"mr-2\">Rows: </label>\r\n                    <select name=\"rows\" id=\"rows\" className=\"mr-2\" onChange={changeQty}>\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"20\">20</option>\r\n                        <option value=\"40\">40</option>\r\n                        <option value=\"60\">60</option>\r\n                        <option value=\"100\">100</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"tool-column\">\r\n                    <button onClick={resetFilters}>Reset</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"students-table\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">First Name</th>\r\n                            <th scope=\"col\">Last Name</th>\r\n                            <th scope=\"col\">Email</th>\r\n                            <th scope=\"col\">Partner</th>\r\n                            <th scope=\"col\">School</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {students && students.map((student: Student) => (\r\n                            <tr key={student._id} id={student._id} className=\"students-row\" onClick={redirect}>\r\n                                <td>{student.firstName}</td>\r\n                                <td>{student.lastName}</td>\r\n                                <td>{student.email}</td>\r\n                                <td>{student.partner}</td>\r\n                                <td>{student.programDetail.school}</td>\r\n                            </tr>\r\n                        ))}\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"container\">\r\n                <nav aria-label=\"Page navigation \">\r\n                    <ul className=\"pagination justify-content-center\">\r\n                        {page > 1 &&\r\n                            <>\r\n                                <li className=\"page-item\">\r\n                                    <Link className=\"page-link\" to=\"/students/\" aria-label=\"Previous\">\r\n                                        <span aria-hidden=\"true\">&laquo;</span>\r\n                                    </Link>\r\n                                </li>\r\n                                <li className=\"page-item\">\r\n                                    <Link className=\"page-link\" to={\"/students/\" + (page - 1)} aria-label=\"Previous\">\r\n                                        <span aria-hidden=\"true\">&laquo;</span>\r\n                                    </Link>\r\n                                </li>\r\n                                <li className=\"page-item\"><Link className=\"page-link\" to={\"/students/\" + (page - 1)}>{(page - 1)}</Link></li>\r\n                            </>\r\n                        }\r\n                        <li className=\"page-item disabled\"><Link className=\"page-link\" to=\"#\">{page}</Link></li>\r\n                        {HAS_NEXT &&\r\n                            <>\r\n                                <li className=\"page-item\"><Link className=\"page-link\" to={\"/students/\" + (page + 1)}>{page + 1}</Link></li>\r\n                                <li className=\"page-item\">\r\n                                    <Link className=\"page-link\" to={\"/students/\" + (page + 1)} aria-label=\"Next\">\r\n                                        <span aria-hidden=\"true\">&raquo;</span>\r\n                                    </Link>\r\n                                </li>\r\n                                <li className=\"page-item\">\r\n                                    <Link className=\"page-link\" to={\"/students/\" + (LAST_PAGE)} aria-label=\"Next\">\r\n                                        <span aria-hidden=\"true\">&raquo;&raquo;</span>\r\n                                    </Link>\r\n                                </li>\r\n                            </>\r\n                        }\r\n                    </ul>\r\n                </nav>\r\n                <div className=\"students-quantity\"><span><b>Total Results: </b>{STUDENTS_LENGTH}</span></div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport './Students.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RouteComponentProps, Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { RootStore } from '../../store';\r\nimport { GetStudents } from '../../actions/StudentActions';\r\n\r\nimport Moment from \"react-moment\";\r\n\r\ntype TParams = { id: string };\r\n\r\nexport default function Posts({ match }: RouteComponentProps<TParams>) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(GetStudents());\r\n    }, []);\r\n\r\n    const studentState = useSelector((state: RootStore) => state.students)\r\n\r\n    const student = studentState.students && (studentState.students.filter(student => student._id === match.params.id))[0];\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"subtitle\">\r\n                <h3 className=\"my-4 text-center  py-2\">Student Information</h3>\r\n            </div>\r\n\r\n\r\n            {student &&\r\n                <div className=\"container text-left student-container\">\r\n                    <div className=\"row my-2\">\r\n                        <div className=\"column mr-5\">\r\n                            <span className=\"student-fields mr-1\">Segoia Student ID Number: </span><br />\r\n                            <span className=\"student-values\">{student.studentId}</span><br />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row my-2 text-justify\">\r\n                        <div className=\"column mr-5\">\r\n                            <span className=\"student-fields  mr-1\">Gender: </span>\r\n                            <span className=\"student-values\">{student.gender}</span>\r\n                        </div>\r\n                        <div className=\"column mr-5 \">\r\n                            <span className=\"student-fields  mr-1\">Nationality: </span>\r\n                            <span className=\"student-values\">{student.nationality}</span>\r\n                        </div>\r\n                        <div className=\"column mr-5\">\r\n                            <span className=\"student-fields  mr-1\">Idiom: </span>\r\n                            <span className=\"student-values\">{student.motherTongue}</span>\r\n                        </div>\r\n                        <div className=\"column mr-5\">\r\n                            <span className=\"student-fields  mr-1\">Passport #: </span>\r\n                            <span className=\"student-values\">{student.passportNumber}</span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"row my-2 text-justify\">\r\n                        <div className=\"column mr-5\">\r\n                            <span className=\"student-fields  mr-1\">Last Name: </span>\r\n                            <span className=\"student-values\">{student.lastName}</span>\r\n                        </div>\r\n                        <div className=\"column mr-5 \">\r\n                            <span className=\"student-fields  mr-1\">First Name: </span>\r\n                            <span className=\"student-values\">{student.firstName}</span>\r\n                        </div>\r\n                        <div className=\"column mr-5\">\r\n                            <span className=\"student-fields  mr-1\">Date of Birth: </span>\r\n                            <span className=\"student-values\"><Moment format=\"YYYY/MM/DD\">{student.dateOfBirth}</Moment></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row my-2 text-justify\">\r\n                        <div className=\"column mr-5\">\r\n                            <span className=\"student-fields  mr-1\">Home Address: </span>\r\n                            <span className=\"student-values\">{student.address}</span>\r\n                        </div>\r\n                        <div className=\"column mr-5 \">\r\n                            <span className=\"student-fields  mr-1\">City: </span>\r\n                            <span className=\"student-values\">{student.city}</span>\r\n                        </div>\r\n                        <div className=\"column mr-5\">\r\n                            <span className=\"student-fields  mr-1\">State: </span>\r\n                            <span className=\"student-values\">{student.state}</span>\r\n                        </div>\r\n                        <div className=\"column mr-5\">\r\n                            <span className=\"student-fields  mr-1\">Postal Code: </span>\r\n                            <span className=\"student-values\">{student.postalCode}</span>\r\n                        </div>\r\n                        <div className=\"column mr-5\">\r\n                            <span className=\"student-fields  mr-1\">Country: </span>\r\n                            <span className=\"student-values\">{student.country}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row my-2 text-justify\">\r\n                        <div className=\"column mr-5\">\r\n                            <span className=\"student-fields  mr-1\">Email: </span>\r\n                            <span className=\"student-values\">{student.address}</span>\r\n                        </div>\r\n                        <div className=\"column mr-5 \">\r\n                            <span className=\"student-fields  mr-1\">Telephone: </span>\r\n                            <span className=\"student-values\">{student.city}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row my-2 text-justify\">\r\n                        <div className=\"column mr-5\">\r\n                            <span className=\"student-fields  mr-1\">Emergency Contact Person: </span>\r\n                            <span className=\"student-values\">{student.emergencyContact.emergencyName}</span>\r\n                        </div>\r\n                        <div className=\"column mr-5 \">\r\n                            <span className=\"student-fields  mr-1\">Emergency Contact Telephone: </span>\r\n                            <span className=\"student-values\">{student.emergencyContact.emergencyPhone}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"subtitle\">\r\n                        <h4 className=\"my-4 text-center  py-2\">Program Details</h4>\r\n                    </div>\r\n                    <div className=\"row my-2 text-justify\">\r\n                        <div className=\"column mr-5\">\r\n                            <span className=\"student-fields  mr-1\">Location: </span>\r\n                            <span className=\"student-values\">{student.programDetail.location}</span>\r\n                        </div>\r\n                        <div className=\"column mr-5 \">\r\n                            <span className=\"student-fields  mr-1\">School: </span>\r\n                            <span className=\"student-values\">{student.programDetail.school}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"subtitle\">\r\n                        <h4 className=\"my-4 text-center  py-2\">Course Information</h4>\r\n                    </div>\r\n                    <div className=\"row my-2 text-justify\">\r\n                        <div className=\"column mr-5\">\r\n                            <span className=\"student-fields  mr-1\">Course: </span>\r\n                            <span className=\"student-values\">{student.courseInformation.name}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row my-2 text-justify\">\r\n                        <div className=\"column mr-5\">\r\n                            <span className=\"student-fields  mr-1\">Start Date: </span>\r\n                            <span className=\"student-values\"><Moment format=\"YYYY/MM/DD\">{student.courseInformation.startDate}</Moment></span>\r\n                        </div>\r\n                        <div className=\"column mr-5 \">\r\n                            <span className=\"student-fields  mr-1\">Weeks of Study: </span>\r\n                            <span className=\"student-values\">{student.courseInformation.weeksOfStudy}</span>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Header from './components/Header/Header';\r\nimport Students from './components/StudentComponents/Students';\r\nimport Student from './components/StudentComponents/Student';\r\n\r\nfunction Home() {\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dashboard</h1>\r\n      <hr />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/students/\" component={Students} />\r\n          <Route exact path=\"/students/:page\" component={Students} />\r\n          <Route exact path=\"/student/:id\" component={Student} />\r\n        </Switch>\r\n\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  Student,\r\n  StudentDispatchTypes,\r\n  STUDENTS_FAIL,\r\n  STUDENTS_SUCCESS,\r\n  FETCH_STUDENTS,\r\n} from \"../actions/StudentActionsTypes\";\r\n\r\ninterface InitialStateI {\r\n  loading: boolean;\r\n  students?: Student[];\r\n}\r\n\r\nconst initialState: InitialStateI = {\r\n  loading: false,\r\n};\r\n\r\nconst StudentReducer = (\r\n  state: InitialStateI = initialState,\r\n  action: StudentDispatchTypes\r\n): InitialStateI => {\r\n  switch (action.type) {\r\n    case STUDENTS_FAIL:\r\n      return {\r\n        loading: false,\r\n      };\r\n    case FETCH_STUDENTS:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case STUDENTS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        students: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default StudentReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport StudentReducer from \"./StudentReducer\";\r\n\r\nconst RootReducer = combineReducers({\r\n  students: StudentReducer,\r\n});\r\n\r\nexport default RootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport RootReducer from \"./reducers/RootReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(\r\n  RootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport type RootStore = ReturnType<typeof RootReducer>;\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}